# ----------------------------------------------------
# FUNCTION TO DELETE INDIVIDUAL COMMANDS FROM HISTORY
# Accepts one history line number as argument.
# Use `dc -1` to remove the last line.
dc () {
  # Prevent the specified history line from being 
  # saved.
  local HISTORY_IGNORE="${(b)$(fc -ln $1 $1)}"

  # Write out the history to file, excluding lines that
  # match `$HISTORY_IGNORE`.
  fc -W

  # Dispose of the current history and read the new 
  # history from file.
  fc -p $HISTFILE $HISTSIZE $SAVEHIST

  # TA-DA!
  print "Deleted '$HISTORY_IGNORE' from history."
}

# prevent all dc commands (function above) from being written to history
zshaddhistory() {
 [[ $1 != 'dc '* ]]
}

# ------------------------------------------------------------
atuin-setup() {
  if ! which atuin &> /dev/null; then return 1; fi
  bindkey '^[e' atuin-search

  eval "$(atuin init zsh --disable-ctrl-r)"

  fzf-atuin-history-widget() {
    local selected num
    setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2>/dev/null

    # local atuin_opts="--cmd-only --limit ${ATUIN_LIMIT:-5000}"
    local atuin_opts="--cmd-only"
    local fzf_opts=(
      --height=${FZF_TMUX_HEIGHT:-80%}
      --tac
      "-n2..,.."
      --tiebreak=index
      "--query=${LBUFFER}"
      "+m"
      '--preview=echo {}'
      "--preview-window=down:3:hidden:wrap"
      "--bind=?:toggle-preview"
      "--bind=ctrl-d:reload(atuin search $atuin_opts -c $PWD),ctrl-r:reload(atuin search $atuin_opts)"
    )

    selected=$(
    eval "atuin search ${atuin_opts}" |
      fzf "${fzf_opts[@]}"
    )
    local ret=$?
    if [ -n "$selected" ]; then
      # the += lets it insert at current pos instead of replacing
      LBUFFER+="${selected}"
    fi
    zle reset-prompt
    return $ret
  }
  zle -N fzf-atuin-history-widget
  bindkey '^R' fzf-atuin-history-widget
}
atuin-setup
